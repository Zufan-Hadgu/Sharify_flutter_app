// Mocks generated by Mockito 5.4.6 from annotations
// in sharify_flutter_app/test/widget_tests/admin_home_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sharify_flutter_app/domain/entities/item_entity.dart' as _i5;
import 'package:sharify_flutter_app/infrastructure/datasources/remote/admin_remote_datasource.dart'
    as _i3;
import 'package:sharify_flutter_app/infrastructure/models/Item_model.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AdminRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdminRemoteDataSource extends _i1.Mock
    implements _i3.AdminRemoteDataSource {
  MockAdminRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(
            Invocation.getter(#dio),
            returnValue: _FakeDio_0(this, Invocation.getter(#dio)),
          )
          as _i2.Dio);

  @override
  _i4.Future<Map<String, int>> fetchDashboardStats() =>
      (super.noSuchMethod(
            Invocation.method(#fetchDashboardStats, []),
            returnValue: _i4.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i4.Future<Map<String, int>>);

  @override
  _i4.Future<void> addAdminItem(
    _i5.ItemEntity? item,
    _i2.MultipartFile? image,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addAdminItem, [item, image]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<_i6.ItemModel>> fetchAdminItems() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAdminItems, []),
            returnValue: _i4.Future<List<_i6.ItemModel>>.value(
              <_i6.ItemModel>[],
            ),
          )
          as _i4.Future<List<_i6.ItemModel>>);

  @override
  _i4.Future<void> updateItem({
    required String? itemId,
    required _i5.ItemEntity? item,
    required _i2.MultipartFile? image,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateItem, [], {
              #itemId: itemId,
              #item: item,
              #image: image,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteItem(String? itemId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteItem, [itemId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
